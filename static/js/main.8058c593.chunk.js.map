{"version":3,"sources":["components/film-list/index.js","components/film-list/film-list.js","components/error-banner/error-banner.png","components/error-banner/index.js","components/error-banner/error-banner.js","components/loading-indicator/index.js","components/loading-indicator/loading-indicator.js","components/sort-buttons/index.js","components/sort-buttons/sort-buttons.js","actions/index.js","components/films-service-context/films-service-context.js","components/hoc/with-swapi-service.js","utils/index.js","components/pages/films-page.js","components/entity-list/entity-link.js","components/entity-list/entity-list-item.js","components/pages/details-page.js","components/container/index.js","components/container/container.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-boundary/error-boundary.js","components/error-boundary/index.js","reducers/index.js","store.js","services/swapi-service.js","index.js"],"names":["FilmList","films","className","map","film","url","id","to","title","episode_id","ErrorBanner","details","errorDetails","Fragment","role","src","image","alt","width","LoadingIndicator","SortButtons","callback","sortTypes","active","aria-label","type","onClick","data-target","fetchEntity","service","dispatch","entity","payload","fetchEntityRequest","getEntity","then","data","fetchEntitySuccess","catch","error","fetchEntityFailure","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","Wrapped","props","swapiService","prepareToSearch","value","toLowerCase","replace","FilmsPage","state","searchValue","sortType","film_1","film_2","episode","onSearchValueChange","event","setState","target","applySearchValue","filter","field","includes","onSortTypeChange","applySortType","sort","this","getFilms","length","loading","hasError","compose","onChange","placeholder","Object","keys","getFilmsList","Component","connect","ownProps","fetchAllFilmsSuccess","fetchFilms","EntityLink","text","EntityListItem","getDataByParams","getItems","items","values","entityName","join","entityObj","entities","StringListItem","key_","renderEntityListItems","renderEntity","keyNameProcess","keyName","toUpperCase","slice","DetailsPage","renderItem","key","prevProps","prevState","snapshot","processedItems","entries","match","params","Container","children","Header","App","basename","path","exact","component","render","ErrorBoundary","errorInfo","errorBanner","defaultProps","filmsInitialState","filmsReducer","action","applyEntityOrCreateNew","entity_key","entitiesReducer","reducer","store","createStore","SwapiService","BASE_URL","getData","a","fetch","response","json","page","entityInUrl","idInUrl","pageInUrl","api_endpoint","answer_data","_resultParser","results","_listItemParser","processed_data","_singleItemParser","fromEntries","processed_value","_processValue","_isLink","test_string","toString","_getTypeAndIdFromURL","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8058c593.chunk.js","sourcesContent":["import FilmList from \"./film-list\";\r\nexport default FilmList;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FilmList = ({films}) => {\r\n    return (\r\n        <div className=\"list-group\">\r\n            {\r\n                films.map(film => {\r\n                    const {id} = film.url;\r\n                    const url = \"/films/\" + id;\r\n                    return (\r\n                        <Link to={url}\r\n                              key={film.episode_id}\r\n                              className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\">\r\n                            {film.title}\r\n                            <span className=\"badge badge-primary badge-pill\">Episode: {film.episode_id}</span>\r\n                        </Link>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmList;","export default __webpack_public_path__ + \"static/media/error-banner.10e573c3.png\";","import ErrorBanner from \"./error-banner\";\r\nexport default ErrorBanner;","import React from \"react\";\r\nimport image from \"./error-banner.png\"\r\n\r\nconst ErrorBanner = ({details}) => {\r\n\r\n    const errorDetails = !details ? null : (\r\n        <React.Fragment>\r\n            <hr/>\r\n            <p className=\"mb-0 text-muted\">Error details: {details}</p>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 alert alert-danger p-5 my-1 text-center\" role=\"alert\">\r\n                    <img src={image} alt=\"\" width=\"100\" className=\"mb-4\"/>\r\n                    <h4 className=\"alert-heading\">Some error happened!</h4>\r\n                    <p>Oops... Looks like something went wrong.</p>\r\n                    {errorDetails}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ErrorBanner;","import LoadingIndicator from \"./loading-indicator\";\r\nexport default LoadingIndicator;","import React from \"react\";\r\n\r\nconst LoadingIndicator = () => {\r\n    return (\r\n        <div className=\"p-3 text-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator;","import SortButtons from \"./sort-buttons\";\r\nexport default SortButtons;","import React from \"react\";\r\n\r\nconst SortButtons = ({callback, sortTypes, active}) => {\r\n    return (\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n            {\r\n                sortTypes.map((type) => {\r\n                    const className = \"btn btn-outline-secondary \" + (type === active ? \"active\" : \"\");\r\n                    return (\r\n                        <button onClick={() => callback(type)} key={type} type=\"button\" data-target=\"title\" className={className}>{type}</button>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortButtons;","export const fetchAllFilmsRequest = () => {\r\n    return {type: \"FETCH_ALL_FILMS_REQUEST\"}\r\n}\r\nexport const fetchAllFilmsFailure = () => {\r\n    return {type: \"FETCH_ALL_FILMS_FAILURE\"}\r\n}\r\nexport const fetchAllFilmsSuccess = (films) => {\r\n    return {\r\n        type: \"FETCH_ALL_FILMS_SUCCESS\",\r\n        payload: films,\r\n    }\r\n}\r\n\r\nexport const fetchFilms = (service, dispatch) => {\r\n    dispatch(fetchAllFilmsRequest());\r\n    service.getEntity(\"films\")\r\n        .then((films) => dispatch(fetchAllFilmsSuccess(films)))\r\n        .catch((error) => dispatch(fetchAllFilmsFailure(error)));\r\n}\r\n\r\nexport const fetchEntityRequest = (entity, id) => {\r\n    return {\r\n        type: \"FETCH_ENTITY_REQUEST\",\r\n        payload: {entity, id}\r\n    }\r\n}\r\nexport const fetchEntitySuccess = (entity, id, data) => {\r\n    return {\r\n        type: \"FETCH_ENTITY_SUCCESS\",\r\n        payload: {entity, id, data}\r\n    }\r\n}\r\n\r\nexport const fetchEntityFailure = (entity, id, error) => {\r\n    return {\r\n        type: \"FETCH_ENTITY_FAILURE\",\r\n        payload: {entity, id, error}\r\n    }\r\n}\r\n\r\nexport const fetchEntity = (service, dispatch, entity, id) => {\r\n    dispatch(fetchEntityRequest(entity, id));\r\n    service.getEntity(entity, {id})\r\n        .then(data => dispatch(fetchEntitySuccess(entity, id, data)))\r\n        .catch(error => dispatch(fetchEntityFailure(entity, id, error)));\r\n}","import React from 'react';\r\n\r\nconst {\r\n    Provider: SwapiServiceProvider,\r\n    Consumer: SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    SwapiServiceProvider,\r\n    SwapiServiceConsumer,\r\n};","import React from \"react\";\r\nimport {SwapiServiceConsumer} from \"../films-service-context/films-service-context\";\r\n\r\nconst withSwapiService = () => (Wrapped) => {\r\n    return (props) => (\r\n        <SwapiServiceConsumer>\r\n            {\r\n                (swapiService) => <Wrapped {...props} swapiService={swapiService} />\r\n            }\r\n        </SwapiServiceConsumer>\r\n    )\r\n}\r\n\r\nexport default withSwapiService;","export const prepareToSearch = (value) => {\r\n    return value.toLowerCase().replace(\" \", \"\")\r\n}","import React from \"react\";\r\n\r\nimport FilmList from \"../film-list\";\r\nimport ErrorBanner from \"../error-banner\";\r\nimport LoadingIndicator from \"../loading-indicator\";\r\nimport SortButtons from \"../sort-buttons\";\r\n\r\nimport {fetchFilms} from \"../../actions\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport withSwapiService from \"../hoc/with-swapi-service\";\r\n\r\nimport {prepareToSearch} from \"../../utils\";\r\n\r\n\r\nclass FilmsPage extends React.Component {\r\n    state = {\r\n        searchValue: \"\",\r\n        sortType: \"episode\",\r\n    }\r\n\r\n    sortTypes = {\r\n        title: (film_1, film_2) => film_1.title[0].toLowerCase() > film_2.title[0].toLowerCase() ? 1 : -1,\r\n        episode: (film_1, film_2) => film_1.episode_id > film_2.episode_id ? 1 : -1,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {getFilms, films} = this.props;\r\n\r\n        if (!films.data.length) {\r\n            getFilms();\r\n        }\r\n    }\r\n\r\n    onSearchValueChange = (event) => {\r\n        this.setState({searchValue: event.target.value});\r\n    }\r\n\r\n    applySearchValue = (films) => {\r\n        return films.filter((film) => {\r\n            const field = prepareToSearch(film.title);\r\n            const searchValue = prepareToSearch(this.state.searchValue);\r\n\r\n            return field.includes(searchValue);\r\n        })\r\n    }\r\n\r\n    onSortTypeChange = (type) => {\r\n        this.setState({sortType: type});\r\n    }\r\n\r\n    applySortType = (films) => {\r\n        const {sortType} = this.state;\r\n\r\n        if (sortType) {\r\n            return films.sort(this.sortTypes[sortType]);\r\n        }\r\n\r\n        return films;\r\n    }\r\n\r\n    getFilmsList() {\r\n        const {loading, data, hasError} = this.props.films;\r\n\r\n        if (hasError) return <ErrorBanner details=\"Film load failure\"/>;\r\n        if (loading) return <LoadingIndicator/>;\r\n\r\n        const films = compose(this.applySortType, this.applySearchValue)(data);\r\n\r\n        return <FilmList films={films}/>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <input onChange={this.onSearchValueChange} type=\"text\" placeholder=\"Search...\"\r\n                           className=\"form-control mr-3\"/>\r\n                    <SortButtons active={this.state.sortType} callback={this.onSortTypeChange} sortTypes={Object.keys(this.sortTypes)}/>\r\n                </div>\r\n                {this.getFilmsList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({films}) => {\r\n    return {films}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const {swapiService} = ownProps;\r\n\r\n    return {\r\n        getFilms: () => fetchFilms(swapiService, dispatch)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withSwapiService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)((FilmsPage));","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst EntityLink = ({entity, id, text}) => {\r\n    return <Link className=\"badge text-white mr-1 badge-primary\" to={\"/\" + entity + \"/\" + id}>{text}</Link>\r\n};\r\n\r\nexport default EntityLink;","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {fetchEntity} from \"../../actions\";\r\n\r\nimport EntityLink from \"./entity-link\";\r\n\r\nimport withSwapiService from \"../hoc/with-swapi-service\";\r\n\r\n\r\nclass EntityListItem extends React.Component {\r\n    getDataByParams = () => {\r\n        const {getItems} = this.props;\r\n        getItems();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataByParams();\r\n    }\r\n\r\n    render() {\r\n        const {items, loading, hasError} = this.props;\r\n        const {entity, id} = this.props;\r\n        let text = Object.values(items)[0];\r\n\r\n        if (loading) text = \"Loading...\"\r\n        if (hasError) text = \"Error\"\r\n\r\n        return <EntityLink entity={entity} id={id} text={text}/>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const {entity, id} = ownProps;\r\n    const entityName = [entity, id].join(\"_\");\r\n    const entityObj = state.entities[entityName] ? state.entities[entityName] : {};\r\n    const {loading=true, hasError=false, data=[]} = entityObj;\r\n    return {\r\n        loading,\r\n        items: data,\r\n        hasError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const {swapiService} = ownProps;\r\n    const {entity, id} = ownProps;\r\n\r\n    return {\r\n        getItems: () => fetchEntity(swapiService, dispatch, entity, id),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withSwapiService(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(EntityListItem)","import React from \"react\";\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {compose} from \"redux\";\r\nimport {fetchEntity} from \"../../actions\";\r\n\r\n\r\nimport LoadingIndicator from \"../loading-indicator\";\r\nimport ErrorBanner from \"../error-banner\";\r\nimport EntityListItem from \"../entity-list/entity-list-item\";\r\nimport EntityLink from \"../entity-list/entity-link\";\r\n\r\nimport withSwapiService from \"../hoc/with-swapi-service\";\r\n\r\n\r\nconst StringListItem = ({key_, value}) => {\r\n    return (\r\n        <li className=\"list-group-item\"><strong>{key_}</strong>: {value}</li>\r\n    )\r\n\r\n}\r\n\r\nconst renderEntityListItems = (value) => {\r\n    const {entity, id} = value;\r\n    return <EntityListItem key={id} entity={entity} id={id}/>\r\n}\r\n\r\nconst renderEntity = (value, title) => {\r\n    const {entity, id} = value;\r\n    return <EntityLink entity={entity} id={id} text={title}/>\r\n}\r\n\r\nconst keyNameProcess = (keyName) => {\r\n    keyName = keyName[0].toUpperCase() + keyName.slice(1);\r\n    return keyName.replace(\"_\", \" \")\r\n}\r\n\r\n\r\nclass DetailsPage extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.items.length !== prevProps.items.length && this.props.items.length === 0) {\r\n            this.props.getItems();\r\n        }\r\n    }\r\n\r\n    renderItem = ([key, value]) => {\r\n        key = keyNameProcess(key);\r\n\r\n        if (typeof value === 'object'  && value.type !== 'entity') {\r\n            value = (\r\n                <div>\r\n                    {value.map(renderEntityListItems)}\r\n                </div>\r\n            );\r\n        }\r\n        if (typeof value === 'object'  && value.type === 'entity') {\r\n            const title = `${value.entity} entity with id ${value.id}`;\r\n            value = renderEntity(value, title);\r\n        }\r\n\r\n        return <StringListItem value={value} key={key} key_={key}/>;\r\n    }\r\n\r\n    render() {\r\n        let {items, loading, hasError} = this.props;\r\n\r\n        if (loading) return <LoadingIndicator />;\r\n        if (hasError) return <ErrorBanner/>;\r\n\r\n        const processedItems = Object.entries(items).map(this.renderItem);\r\n\r\n        return (\r\n            <ul className=\"list-group list-group-flush\">\r\n                {processedItems}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const {entity, id} = ownProps.match.params;\r\n    const entityName = [entity, id].join(\"_\");\r\n    const entityObj = state.entities[entityName] ? state.entities[entityName] : {};\r\n    const {loading=true, hasError=false, data=[]} = entityObj;\r\n    return {\r\n        loading,\r\n        items: data,\r\n        hasError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const {swapiService} = ownProps;\r\n    const {entity, id} = ownProps.match.params;\r\n\r\n    return {\r\n        getItems: () => fetchEntity(swapiService, dispatch, entity, id),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withSwapiService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(DetailsPage);","import Container from \"./container\";\r\nexport default Container;","import React from \"react\";\r\n\r\nconst Container = ({children}) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-9 col-lg-5\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container;","import Header from \"./header\";\r\nexport default Header;","import React from \"react\";\r\nimport \"./header.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"bg-dark text-light px-2 py-3 mb-4\" id=\"header\">\r\n            <h1 className=\"text-center\">StarWars Films</h1>\r\n            <p className=\"text-center\"><Link to=\"/\" className=\"text-muted\">back to homepage</Link></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import App from \"./app\";\r\nexport default App;","import React from \"react\";\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\nimport {FilmsPage, DetailsPage} from \"../pages\";\r\nimport Container from \"../container\";\r\nimport Header from \"../header\";\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'development' ? \"/\" : \"/swapi-gui\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router basename={baseUrl}>\r\n            <Container>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route path={\"/\"} exact component={FilmsPage} />\r\n                    <Route path={\"/:entity/:id\"} component={DetailsPage} />\r\n                    <Route render={() => <Redirect to=\"/\" />}/>\r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ErrorBanner from \"../error-banner\";\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    state = {\r\n        hasError: false,\r\n    };\r\n\r\n    static defaultProps = {\r\n        errorBanner: ErrorBanner,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n       this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        const { hasError } = this.state;\r\n        const { errorBanner, children } = this.props;\r\n\r\n        return hasError ? errorBanner : children;\r\n    }\r\n}","import ErrorBoundary from \"./error-boundary\";\r\nexport default ErrorBoundary;","const filmsInitialState = {\r\n    loading: true,\r\n    hasError: false,\r\n    data: []\r\n}\r\n\r\nconst filmsReducer = (state = filmsInitialState, action) => {\r\n    switch (action.type) {\r\n        case \"FETCH_ALL_FILMS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                hasError: false,\r\n            }\r\n        case \"FETCH_ALL_FILMS_FAILURE\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                hasError: true,\r\n            }\r\n        case \"FETCH_ALL_FILMS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                loading: false,\r\n                hasError: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst applyEntityOrCreateNew = (entities, action, params) => {\r\n    const {entity, id} = action.payload;\r\n    const entity_key = [entity, id].join(\"_\");\r\n    const defaultEntity = {\r\n        loading: true,\r\n        hasError: false,\r\n        data: [],\r\n    }\r\n    entities[entity_key] = {\r\n        ...defaultEntity,\r\n        ...entities[entity_key],\r\n        ...params,\r\n    };\r\n\r\n    return entities;\r\n}\r\n\r\nconst entitiesReducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FETCH_ENTITY_REQUEST\":\r\n            return applyEntityOrCreateNew(state, action, {loading: true, hasError: false})\r\n        case \"FETCH_ENTITY_SUCCESS\":\r\n            const {data} = action.payload;\r\n            return applyEntityOrCreateNew(state, action, {loading: false, hasError: false, data})\r\n        case \"FETCH_ENTITY_FAILURE\":\r\n            return applyEntityOrCreateNew(state, action, {loading: false, hasError: true})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst reducer = (state = {}, action) => {\r\n    return {\r\n        films: filmsReducer(state.films, action),\r\n        entities: entitiesReducer(state.entities, action)\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","export default class SwapiService {\r\n    BASE_URL = \"https://swapi.dev/api/\";\r\n\r\n    getData = async (url) => {\r\n        return fetch(url)\r\n            .then((response) => response.json());\r\n    }\r\n\r\n    getEntity = async (entity, params = {}) => {\r\n        const {id = null, page = null} = params;\r\n        const entityInUrl = entity + \"/\";\r\n        const idInUrl = id ? id + '/' : \"\";\r\n        const pageInUrl = page ? \"?page=\" + page : \"\";\r\n        const api_endpoint = this.BASE_URL + entityInUrl + idInUrl + pageInUrl;\r\n        const answer_data = await this.getData(api_endpoint);\r\n\r\n        return this._resultParser(answer_data);\r\n    };\r\n\r\n    _resultParser = (data) => {\r\n        let result_data;\r\n\r\n        if (data.results) {\r\n            result_data = data.results.map(this._listItemParser);\r\n        } else {\r\n            result_data = this._listItemParser(data);\r\n        }\r\n\r\n        return result_data;\r\n    };\r\n\r\n    _listItemParser = (data) => {\r\n        const data_entries = Object.entries(data)\r\n        const processed_data = data_entries.map(this._singleItemParser)\r\n        return Object.fromEntries(processed_data);\r\n    };\r\n\r\n    _singleItemParser = ([key, value]) => {\r\n        let processed_value;\r\n\r\n        if (value !== null) {\r\n            if (typeof value === 'object') {\r\n                processed_value = value.map(this._processValue);\r\n            } else {\r\n                processed_value = this._processValue(value);\r\n            }\r\n        }\r\n\r\n        return [key, processed_value];\r\n    };\r\n\r\n    _isLink = (test_string) => {\r\n        return test_string.match(/^http(s)?:\\/\\//);\r\n    }\r\n\r\n    _processValue = (value) => {\r\n        if (this._isLink(value.toString())) {\r\n            return this._getTypeAndIdFromURL(value);\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    _getTypeAndIdFromURL(url) {\r\n        const [, entity, , id = null] = url.match(/\\/([a-zA-Z]+)\\/((\\d+)\\/)?$/);\r\n        return {\r\n            entity,\r\n            id,\r\n            type: \"entity\",\r\n        };\r\n    }\r\n}","// React\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Components\r\nimport App from \"./components/app\";\r\nimport {SwapiServiceProvider} from \"./components/films-service-context/films-service-context\";\r\nimport ErrorBoundary from \"./components/error-boundary\";\r\n\r\n// Redux\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n// Services\r\nimport {SwapiService} from \"./services\";\r\n\r\n// CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst swapiService = new SwapiService()\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundary>\r\n            <SwapiServiceProvider value={swapiService}>\r\n                <App/>\r\n            </SwapiServiceProvider>\r\n        </ErrorBoundary>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}